from time import sleep,sleep_msimport network, time, urequestsfrom hx711 import HX711from machine import Pin, ADC, PWM, freqfrom dcmotor import DCMotor  import dhtimport utimeimport ujsonimport ufirebase as firebaseimport ntptimefrequency = 15000       pin1 = Pin(5, Pin.OUT)    pin2 = Pin(4, Pin.OUT)finalcarreraInitCompuerta = Pin(15,Pin.IN, Pin.PULL_UP)finalcarreraFinCompuerta = Pin(12,Pin.IN, Pin.PULL_UP)enable = PWM(Pin(14), frequency)  dc_motor = DCMotor(pin1, pin2, enable)      dc_motor = DCMotor(pin1, pin2, enable, 350, 1023)pinmotorCompuerta1 = Pin(16, Pin.OUT)    pinmotorCompuerta2 = Pin(17, Pin.OUT)enableCompuerta = PWM(Pin(18), frequency) dc_motor_compuerta = DCMotor(pinmotorCompuerta1, pinmotorCompuerta2, enableCompuerta)      dc_motor_compuerta = DCMotor(pinmotorCompuerta1, pinmotorCompuerta2, enableCompuerta, 350, 1023)driverPeso = HX711(19, 21,1)#Iniciar con el motor detenidodc_motor.stop()dc_motor_compuerta.stop()print("Programa Iniciado")#----------------------[ CONECTAR WIFI ]---------------------------------------------------------#def conectaWifi (red, password):      global miRed      miRed = network.WLAN(network.STA_IF)           if not miRed.isconnected():              #Si no está conectado…          miRed.active(True)                   #activa la interface          miRed.connect(red, password)         #Intenta conectar con la red          print('Conectando a la red', red +"…")          timeout = time.time ()          while not miRed.isconnected():           #Mientras no se conecte..              if (time.ticks_diff (time.time (), timeout) > 10):                  return False      return True        #----------------------[ CELDA DE CARGA ]---------------------------------------------------------#    KNOWN_WEIGHT = 35tare = 16709250slope =763.2286def readPeso():    driverPeso.power_on()    while (driverPeso.is_ready()):        pass    measure= driverPeso.read(True)    return(measure)        #------------------------------------[BOT]---------------------------------------------------------------------#if conectaWifi ("Juan Franco Wifi", "N0Limits@"):    print ("Conexión exitosa!")    print('Datos de la red (IP/netmask/gw/DNS):', miRed.ifconfig())        print("Actualizando Hora")    ntptime.host ="co.pool.ntp.org"        try:      print("Hora Antes：%s" %str(time.localtime()))      #make sure to have internet connection      ntptime.settime(timezone=-5, server = 'co.pool.ntp.org')      #print("Hora Real：%s" %str(time.localtime()))    except:      pass                firebase.setURL("https://autofoodpet-default-rtdb.firebaseio.com/")        while True:                def startDispenser():           gramosDispensar = firebase.dataresult["manualGrams"]                   print("Dispensando"+ str(gramosDispensar))                      pesoDispensado = 0                      while pesoDispensado <= gramosDispensar-4:               pesoDispensado = (readPeso()-tare)/slope               girarmotor()                      sleep(2)           dc_motor.stop()                                 while finalcarrera.finalcarreraFinCompuerta() != 1:               girarmotorCompuertaOpen()                                                            while finalcarrera.finalcarreraInitCompuerta() != 1:                girarmotorCompuertaClose()                                           sleep(2)           dc_motor_compuerta.stop()                                        #Put Fin dispensacion           firebase.put("manualdispense/manualRun", False, bg=1)           #Put Historico dispensacion                      t= time.localtime()           datetimeSave = '{:04d}-{:02d}-{:02d}-{:02d}:{:02d}'.format(t[0], t[1], t[2], t[3], t[4])                    firebase.put("historicoDispensacion", {"fechaHora": datetimeSave, "gramosDispensados": gramosDispensar}, bg=0)                                     #Get         firebase.get("manualdispense", "dataresult", bg=0)                #print("Recuperado.... "+str(firebase.dataresult))        #print(firebase.dataresult["manualRun"])                if firebase.dataresult["manualRun"] == True:            startDispenser()                sleep(5)else:       print ("Imposible conectar")       miRed.active (False)def girarmotor():  print("moviendo motor")  dc_motor.forward(50)    def girarmotorCompuertaOpen():  print("moviendo motor")  dc_motor.forward(50)  def girarmotorCompuertaClose():  print("moviendo motor")  dc_motor.backwards(50)  